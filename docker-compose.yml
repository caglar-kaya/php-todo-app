---
version: '3.7'

services:
  php-fpm:
    build:
      context: './'
      target: php-fpm
    image: "${DOCKER_IMAGE_NAME}-php-fpm:${APP_VERSION}"
    # This notation is important since the CI removes this line
    volumes: [{type: bind, source: ./, target: /var/www/html, read_only: true}]
    read_only: true
    restart: unless-stopped
    depends_on:
      - mysql

  nginx:
    build:
      context: './'
      target: nginx
    image: "${DOCKER_IMAGE_NAME}-nginx:${APP_VERSION}"
    ports:
      - ${NGINX_PORT:-8080}:8080
    # This notation is important since the CI removes this line
    volumes: [{type: bind, source: ./, target: /var/www/html, read_only: true}]
    read_only: true
    restart: unless-stopped
    depends_on:
      - php-fpm

  php:
    build:
      context: './'
      target: php
    image: "${DOCKER_IMAGE_NAME}-php:${APP_VERSION}"
    command: "artisan queue:work"
    # This notation is important since the CI removes this line
    volumes: [{type: bind, source: ./, target: /var/www/html, read_only: true}]
    read_only: true
    restart: unless-stopped

  mysql:
    image: repo.harbor.intermax.nl/dockerhub-proxy/library/mysql:8.0
    volumes:
      - mysqldata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    ports:
      - ${DB_PORT_EXTERNAL:-3306}:3306

  test-mysql:
    image: repo.harbor.intermax.nl/dockerhub-proxy/library/mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped

  php-cli:
    image: repo.harbor.intermax.nl/dockerhub-proxy/intermaxgroup/composer:latest
    shm_size: 1024m
    environment:
      XDEBUG_MODE: coverage
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    volumes: [{type: bind, source: ./, target: /var/www/html}]
    stdin_open: true
    tty: true

  redis:
    image: repo.harbor.intermax.nl/dockerhub-proxy/intermaxgroup/redis:latest
    restart: unless-stopped

  mailhog:
    image: repo.harbor.intermax.nl/dockerhub-proxy/intermaxgroup/mailhog:latest
    ports:
      - ${MAILHOG_PORT:-8025}:8025
    restart: unless-stopped

volumes:
  mysqldata:
